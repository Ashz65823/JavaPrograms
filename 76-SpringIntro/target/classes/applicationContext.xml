<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="shapeBean" class="com.zensar.training.bean.Square">
		<property name="size" value="40"></property><!-- this is getSize when 
			we want to use we remove get and flip S to s -->
	</bean>

	<bean id="studBean" class="com.zensar.training.bean.Student">
		<property name="rollNo" value="5001"></property>
		<property name="name" value="Kiran"></property>
		<property name="averageMark" value="60.57"></property><!-- setter Injection -->
	</bean>

	<bean id="studBean2" class="com.zensar.training.bean.Student">
		<constructor-arg value="5002"></constructor-arg>
		<constructor-arg value="John"></constructor-arg>
		<constructor-arg value="78.90"></constructor-arg><!-- constructor 
			injection -->
	</bean>
	<bean id="personBean" class="com.zensar.training.bean.Person"
		scope="prototype">
		<property name="age" value="25"></property>
	</bean>
	<bean id="companyName" class="java.lang.String">
		<constructor-arg value="Zensar"></constructor-arg>
	</bean>

	<bean id="salaryBean" class="java.lang.Double">
		<constructor-arg value="20000.00"></constructor-arg>
	</bean>
	
	
	<bean id="aGradeSalCal"
		class="com.zensar.training.bean.AGradeSalaryCalculator">
	</bean>
	
	<bean id="bGradeSalCal"
		class="com.zensar.training.bean.BGradeSalaryCalculator">
	</bean>
	
	<bean id="empBean" class="com.zensar.training.bean.Employee" autowire="byName">  <!-- directly injecting salary calculator -->
		<property name="id" value="2001"></property>
		<property name="name" value="Ash"></property>
		<property name="salary" value="10000.00"></property>	
	</bean>
	<!-- When we give byName then we have to give aGradeSalCal as SalaryInteface name so that the bean will call the aGradeSalCal class implementation by using byName wire  -->
</beans>